name: Build
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Extract version from package.json
        id: get_version
        run: |
          if [ "$OSTYPE" = "linux-gnu"* ]; then
            VERSION=$(jq -r .version package.json)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          elif [ "$env:OS" = "Windows_NT" ]; then
            $version = (Get-Content package.json | ConvertFrom-Json).version
            echo "VERSION=$version" >> $env:GITHUB_ENV
          fi

      - name: Build app
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [ ! -f "dist/linux-unpacked/cs2-server-picker" ]; then
            echo "Linux build not found!"
            exit 1
          fi
          if [ ! -f "dist/cs2-server-picker-$VERSION.AppImage" ]; then
            echo "AppImage not found!"
            exit 1
          fi
          if [ ! -f "dist/cs2-server-picker-$VERSION.deb" ]; then
            echo "DEB package not found!"
            exit 1
          fi

      - name: Verify Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if (!(Test-Path "dist\win-unpacked\cs2-server-picker.exe")) {
            Write-Error "Windows build not found!"
            exit 1
          }
          if (!(Test-Path "dist\cs2-server-picker-Setup-$env:VERSION.exe")) {
            Write-Error "Setup executable not found!"
            exit 1
          }

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            dist/cs2-server-picker-Setup-*.exe
          exclude: |
            dist/win-unpacked/**

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist/cs2-server-picker-*.AppImage
            dist/cs2-server-picker-*.deb
          exclude: |
            dist/linux-unpacked/**

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/cs2-server-picker-Setup-*.exe
            dist/cs2-server-picker-*.AppImage
            dist/cs2-server-picker-*.deb
          draft: false
          prerelease: false
          generate_release_notes: true